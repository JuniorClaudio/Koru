map = null
markers = []
@loadMapWithLocations = (locations, locale) ->
  markers = []
  lima =
    lat: -12.0431800
    lng: -77.0282400
  map = new (google.maps.Map)(document.getElementById('refuges-map'),
    zoom: 12
    center: lima)

  checkbox_container = document.createElement('div')
  centerControl = new map_checkbox(checkbox_container, map)
  checkbox_container.index = 1
  map.controls[google.maps.ControlPosition.TOP_LEFT].push checkbox_container

  locations = locations
  infowindow = new google.maps.InfoWindow
  bounds = new (google.maps.LatLngBounds)
  for location in locations
    marker = new (google.maps.Marker)(
      position: new (google.maps.LatLng)(parseFloat(location[1]), parseFloat(location[2]))
      content: location[0]
      id: location[3]
      city: location[4]
      country: location[5]
      status: location[6]
      issues_by_entities: location[7]
      contact_name: location[8]
      contact_phone: location[9]
      map: map)
    markers.push marker
    info_marker_event infowindow, marker, locale

  map.addListener 'bounds_changed', ->
    sessionStorage['last_lat'] = map.center.lat()
    sessionStorage['last_lng'] = map.center.lng()
    sessionStorage['last_zoom'] = map.zoom

  map.setCenter new google.maps.LatLng(parseFloat(sessionStorage['last_lat']), parseFloat(sessionStorage['last_lng']))
  map.setZoom(parseInt(sessionStorage['last_zoom']))

  if JSON.parse(sessionStorage["map_checkbox_status"])
    populate_sidebar_with_map(locale)
  else
    populate_sidebar_without_map(locations, locale)

  # Search for google maps
  input = document.getElementById('input-search-by-location')
  searchBox = new (google.maps.places.SearchBox)(input)
  map.addListener 'bounds_changed', ->
    searchBox.setBounds map.getBounds()
    return
  new_markers = []
  searchBox.addListener 'places_changed', ->
    places = searchBox.getPlaces()
    if places.length == 0
      return
    new_markers.forEach (marker) ->
      marker.setMap null
      return
    new_markers = []
    new_bounds = new (google.maps.LatLngBounds)
    places.forEach (place) ->
      if !place.geometry
        console.log 'Returned place contains no geometry'
        return
      icon =
        url: place.icon
        size: new (google.maps.Size)(71, 71)
        origin: new (google.maps.Point)(0, 0)
        anchor: new (google.maps.Point)(17, 34)
        scaledSize: new (google.maps.Size)(25, 25)
      new_markers.push new (google.maps.Marker)(
        map: map
        icon: icon
        title: place.name
        position: place.geometry.location)
      if place.geometry.viewport
        new_bounds.union place.geometry.viewport
      else
        new_bounds.extend place.geometry.location
      return
    map.fitBounds new_bounds
    return

@populate_sidebar_with_map = (locale) ->
  sidebar = document.getElementById("list-refuges")
  google.maps.event.addListener map, 'bounds_changed', ->
    google.maps.event.trigger(map, "resize")
    sidebar.innerHTML = ""
    results = new Array
    new_locations = new Array
    i = 0
    while i < markers.length
      if map.getBounds().contains(markers[i].getPosition())
        results.push markers[i]
      i++
    if results.length == 0
      if locale == "es"
        no_refuges_found = "NingÃºn refugio ha sido encontrado."
      else
        no_refuges_found = "No refuges found in the location in the map."
      sidebar.innerHTML = '<li><a href="#"><div><h4>' + no_refuges_found + '</h4></div><a></li>'
    else
      for result in results
        refuge_status = ""
        new_locations.push result.getPosition()
        if result.status == "good"
          refuge_status = "refuge-good"
        else
          refuge_status = "refuge-bad"
        li = document.createElement('li')
        li.setAttribute("onclick", "ga('send','event','refuges','" + result.content + "','-',null);")
        link_to = document.createElement('a')
        table = document.createElement('table')
        tr_name = document.createElement('tr')
        td_status_icon = document.createElement('td')
        td_status_icon.setAttribute("rowspan", "2")
        i = document.createElement('i')
        i.setAttribute("class", refuge_status)
        td_status_icon.appendChild(i)
        td_name = document.createElement('td')
        td_name.appendChild(document.createTextNode(result.content))
        tr_name.appendChild(td_status_icon)
        tr_name.appendChild(td_name)
        tr_address = document.createElement('tr')
        td_address = document.createElement('td')
        h6_address = document.createElement('h6')
        if result.city == ''
          refuge_description = result.country
        else
          refuge_description = result.city + ", " + result.country
        h6_address.appendChild(document.createTextNode(refuge_description))
        td_address.appendChild(h6_address)
        tr_address.appendChild(td_address)
        table.appendChild(tr_name)
        table.appendChild(tr_address)
        link_to.appendChild(table)
        link_to.setAttribute("href", "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + result.id)
        link_to.setAttribute("data-method", "get")
        li.appendChild(link_to)
        sidebar.appendChild(li)
      sessionStorage['refuges_list'] = sidebar.innerHTML
    sessionStorage['new_locations'] = new_locations
    return
  return

@populate_sidebar_without_map = (locations, locale) ->
  google.maps.event.clearListeners(map, 'bounds_changed');
  map.addListener 'bounds_changed', ->
    sessionStorage['last_lat'] = map.center.lat()
    sessionStorage['last_lng'] = map.center.lng()
    sessionStorage['last_zoom'] = map.zoom
  sidebar = document.getElementById("list-refuges")
  sidebar.innerHTML = ""
  for location in locations
    refuge_status = ""
    if location[6] == "good"
      refuge_status = "refuge-good"
    else
      refuge_status = "refuge-bad"
    li = document.createElement('li')
    li.setAttribute("onclick", "ga('send','event','refuges','" + location[0] + "','-',null);")
    link_to = document.createElement('a')
    table = document.createElement('table')
    tr_name = document.createElement('tr')
    td_status_icon = document.createElement('td')
    td_status_icon.setAttribute("rowspan", "2")
    i = document.createElement('i')
    i.setAttribute("class", refuge_status)
    td_status_icon.appendChild(i)
    td_name = document.createElement('td')
    td_name.appendChild(document.createTextNode(location[0]))
    tr_name.appendChild(td_status_icon)
    tr_name.appendChild(td_name)
    tr_address = document.createElement('tr')
    td_address = document.createElement('td')
    h6_address = document.createElement('h6')
    if location[4] == ''
      refuge_description = location[5]
    else
      refuge_description = location[4] + ", " + location[5]
    h6_address.appendChild(document.createTextNode(refuge_description))
    td_address.appendChild(h6_address)
    tr_address.appendChild(td_address)
    table.appendChild(tr_name)
    table.appendChild(tr_address)
    link_to.appendChild(table)
    link_to.setAttribute("href", "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + location[3])
    link_to.setAttribute("data-method", "get")
    li.appendChild(link_to)
    sidebar.appendChild(li)
  sessionStorage['refuges_list'] = sidebar.innerHTML
  return

@initialize_refuges = ->
  $('#refuges-map').css('height', $('#sidebar-nav').height())

@show_on_map = (location, locale) ->
  geocoder = new google.maps.Geocoder
  infowindow = new google.maps.InfoWindow
  latlng = {lat: parseFloat(location.latitude), lng: parseFloat(location.longitude)}
  geocoder.geocode { 'location': latlng }, (results, status) ->
    if status == 'OK'
      if results[1]
        map.setZoom 15
        map.panTo latlng
        show_marker = new (google.maps.Marker)(
          id: location.id
          city: location.city
          country: location.country_name
          position: latlng
          content: String(location.name)
          issues_by_entities: location.issues_by_entities
          contact_name: location.contact_name
          contact_phone: location.contact_phone
          map: map)
        contact_phone = initialize_values show_marker.contact_phone
        contact_name = initialize_values show_marker.contact_name
        entities_1 = []
        entities_2 = []
        i = 0
        for entity in show_marker.issues_by_entities
          if i % 2 == 0
            if entity[1] == 0
              entities_1 += tr_content entity[0], 'green'
            else
              entities_1 += tr_content entity[0], 'red'
          else
            if entity[1] == 0
              entities_2 += tr_content entity[0], 'green'
            else
              entities_2 += tr_content entity[0], 'red'
          i++
        info_marker_event infowindow, show_marker, locale
      else
        window.alert 'No results found'
    else
      window.alert 'Geocoder failed due to: ' + status
    return

@filter_map = (new_locations, locale) ->
  clear_overlays()
  markers = []
  bounds = new (google.maps.LatLngBounds)
  infowindow = new google.maps.InfoWindow
  for location in new_locations
    marker = new (google.maps.Marker)(
      position: new (google.maps.LatLng)(parseFloat(location[1]), parseFloat(location[2]))
      content: location[0]
      id: location[3]
      city: location[4]
      country: location[5]
      status: location[6]
      issues_by_entities: location[7]
      contact_name: location[8]
      contact_phone: location[9]
      map: map)
    info_marker_event infowindow, marker, locale
    markers.push marker
    bounds.extend marker.getPosition()
  map.fitBounds bounds

clear_overlays = ->
  i = 0
  while i < markers.length
    markers[i].setMap null
    i++
  markers.length = 0
  return

info_marker_event = (infowindow, marker, locale) ->
  contact_phone = initialize_values marker.contact_phone, locale
  contact_name = initialize_values marker.contact_name, locale
  if locale == 'es'
    t_coordinator = "Coordinador"
    t_phone = "TelÃ©fono"
    t_more_details = "Ver mÃ¡s "
  else
    t_coordinator = "Coordinator"
    t_phone = "Phone"
    t_more_details = "Show more "
  issues_by_entities_1 = []
  issues_by_entities_2 = []
  i = 0
  for entity in marker.issues_by_entities
    if i % 2 == 0
      if entity[1] == 0
        issues_by_entities_1 += tr_content entity[0], 'green'
      else
        issues_by_entities_1 += tr_content entity[0], 'red'
    else
      if entity[1] == 0
        issues_by_entities_2 += tr_content entity[0], 'green'
      else
        issues_by_entities_2 += tr_content entity[0], 'red'
    i++
  link_to = "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + marker.id
  analytics_track_event = "ga('send','event','refuges','" + marker.content + "','-',null);"
  contentString = '<div id="content">' +
    '<div id="siteNotice">' +
    '</div>' +
    '<h3 id="firstHeading" class="firstHeading" style="padding: 0 28px;">' + marker.content + '</h3>' +
    '<div id="bodyContent">' +
    '<p style="padding: 0 30px;">' + t_coordinator + ': ' + contact_name + '</p>' +
    '<p style="padding: 0 30px;">' + t_phone + ': ' + contact_phone + '</p>' +
    '<div class="col-md-12">' +
    '<div class="col-md-6"><table>' + issues_by_entities_1 + '</table></div>' +
    '<div class="col-md-6"><table>' + issues_by_entities_2 + '</table></div>' +
    '</div>' +
    '<div class="col-md-12">' +
    "<a href=" + link_to + ' class="pull-right" onclick="' + analytics_track_event + '" style="padding: 11px 0;">' + t_more_details + '></a>' +
    '</div>' +
    '</div>' +
    '</div>'
  google.maps.event.addListener marker, 'mouseover', do (marker) ->
    ->
      infowindow.setContent contentString
      infowindow.open map, marker
      return

tr_content = (entity, status)->
  '<tr><td style="padding-right: 10px;"><span class="circle-' + status + '"></span></td><td>' + entity + '</td></tr>'

initialize_values = (new_value, locale) ->
  if new_value == ''
    if locale == "es"
      result = "No registrado"
    else
      result = "Not registered"
  else
    result = new_value
  return result

map_checkbox = (controlDiv, map) ->
  controlUI = document.createElement('div')
  controlUI.style.backgroundColor = '#fff'
  controlUI.style.borderRadius = '1px'
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)'
  controlUI.style.marginTop = '10px'
  controlUI.style.textAlign = 'center'
  controlUI.style.padding = '0px 10px 0px 10px'
  controlDiv.appendChild controlUI
  controlText = document.createElement('div')
  controlText.setAttribute("class", "checkbox-container ui checkbox")
  controlText.setAttribute("onclick", "search_map_if_moving_listener()")
  checkbox = document.createElement('input')
  checkbox.setAttribute("type", "checkbox")
  checkbox.setAttribute("id", "search_mode")
  if JSON.parse(sessionStorage["map_checkbox_status"])
    checkbox.checked = true
  else
    checkbox.checked = false
  label = document.createElement('label')
  label.appendChild(document.createTextNode("Buscar mientras me desplazo en el mapa"))
  controlText.appendChild checkbox
  controlText.appendChild label
  controlUI.appendChild controlText
  return

document.addEventListener "turbolinks:load", ->
  initialize_refuges()
  $("#search-button").on 'click', ->
    input = document.getElementById('input-search-by-location')
    google.maps.event.trigger input, 'focus'
    google.maps.event.trigger input, 'keydown', keyCode: 13
    return
  $('#select-search-mode').on 'change', ->
    if $('#select-search-mode option:selected').val() == 'locations'
      $('#input-search-by-location').removeClass 'hide'
      $('#input-search-by-refuge').addClass 'hide'
    else
      $('.results').addClass 'hide'
      $('#input-search-by-location').addClass 'hide'
      $('#input-search-by-refuge').removeClass 'hide'
    return

  jQuery ($) ->
  $('#list-refuges-bar').on 'scroll', ->
    if $(this).scrollTop() + $(this).innerHeight() == $(this)[0].scrollHeight
      $("#sidebar-arrow-down").hide()
    else
      $("#sidebar-arrow-down").show()
    return
  return

@loadMapWithRefuge = (refuge, locale) ->
  refuge_marker =
    lat: parseFloat(refuge[1])
    lng: parseFloat(refuge[2])
  map = new (google.maps.Map)(document.getElementById('refuge-map'),
    zoom: 12
    center: refuge_marker)
  marker = new (google.maps.Marker)(
    position: refuge_marker
    map: map)
  google.maps.event.addListenerOnce map, 'idle', ->
    google.maps.event.trigger map, 'resize'
    map.setCenter(refuge_marker);
    return