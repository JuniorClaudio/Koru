map = null
markers = []
infowindow = null
@loadMapWithLocations = (locations, locale, view_mode_updated = true) ->
  markers = []
  lima =
    lat: -12.0431800
    lng: -77.0282400
  map = new (google.maps.Map)(document.getElementById('refuges-map'),
    zoom: 12
    center: lima)
  map.setOptions
    minZoom: 3
    maxZoom: 20

  checkbox_container = document.createElement('div')
  centerControl = new map_checkbox(checkbox_container, map, locale)
  checkbox_container.index = 1
  map.controls[google.maps.ControlPosition.TOP_LEFT].push checkbox_container

  general_infowindow = new google.maps.InfoWindow
  infowindow = general_infowindow
  locations = locations
  bounds = new (google.maps.LatLngBounds)
  for location in locations
    marker = new (google.maps.Marker)(
      position: new (google.maps.LatLng)(parseFloat(location[1]), parseFloat(location[2]))
      content: location[0]
      id: location[3]
      city: location[4]
      country: location[5]
      status: location[6]
      issues_by_entities: location[7]
      contact_name: location[8]
      contact_phone: location[9]
      map: map)
    markers.push marker
    info_marker_event general_infowindow, marker, locale

  if sessionStorage['last_lat'] == undefined && sessionStorage['last_lng'] == undefined && sessionStorage['last_zoom'] == undefined
    sessionStorage['last_lat'] = map.center.lat()
    sessionStorage['last_lng'] = map.center.lng()
    sessionStorage['last_zoom'] = map.zoom

  map.addListener 'bounds_changed', ->
    sessionStorage['last_lat'] = map.center.lat()
    sessionStorage['last_lng'] = map.center.lng()
    sessionStorage['last_zoom'] = map.zoom

  map.setCenter new (google.maps.LatLng)(parseFloat(sessionStorage['last_lat']), parseFloat(sessionStorage['last_lng']))
  map.setZoom(parseInt(sessionStorage['last_zoom']))

  if sessionStorage["map_checkbox_status"] == 'true'
    populate_sidebar_with_map(locale)
  else
    populate_sidebar_without_map(locations, locale)

  # Search with typeahead
  if view_mode_updated
    search_with_typeahead(locale)

  refugesSource = new Bloodhound(
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value')
    queryTokenizer: Bloodhound.tokenizers.whitespace
    remote:
      url: "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/filter_by.json?query=%QUERY"
      wildcard: '%QUERY')

  $('#filter-select').dropdown
    useLabels: false
    onChange: ->
      refugesSource.remote.url = "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/filter_by.json?query=%QUERY" + get_filters_selected()
      $('#form-filter-refuges').submit()
      return

  $('#responsive-filter-select').dropdown
    useLabels: false
    onChange: ->
      refugesSource.remote.url = "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/filter_by.json?query=%QUERY" + get_filters_selected()
      $('#responsive-form-filter-refuges').submit()
      return

  $('.typeahead').bind 'typeahead:select', (ev, suggestion) ->
    show_on_map suggestion, locale
    return

search_with_typeahead = (locale) ->
  no_refuges_found = ''
  if locale == 'es'
    no_refuges_found = 'Ningún refugio encontrado.'
  else
    no_refuges_found = 'No refuges found.'

  refugesSource = new Bloodhound(
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value')
    queryTokenizer: Bloodhound.tokenizers.whitespace
    remote:
      url: "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/filter_by.json?query=%QUERY"
      wildcard: '%QUERY')

  $('#input-search-by-location .typeahead').typeahead null,
    limit: 1000
    name: 'refuges'
    display: 'name'
    source: refugesSource
    templates:
      empty: [
        '<h4 style="padding: 0 15px 0 15px;">'
        no_refuges_found
        '</h4>'
      ].join '\n'
      suggestion: (data) ->
        [
          '<div>'
          '<h4>' + data.name + '</h4>'
          '<h5 class="no-margin-top">' + data.full_address + '</h5>'
          '</div>'
        ].join '\n'

  $('#responsive-input-search-by-location .typeahead').typeahead(null,
    limit: 999
    name: 'refuges'
    display: 'name'
    source: refugesSource
    templates:
      empty: [
        '<h4 style="padding: 0 15px 0 15px;">'
        no_refuges_found
        '</h4>'
      ].join('\n')
      suggestion: (data) ->
        [
          '<div>'
          '<h4>' + data.name + '</h4>'
          '<h5 class="no-margin-top">' + data.full_address + '</h5>'
          '</div>'
        ].join '\n'
  ).on 'typeahead:selected', (event, selection) ->
    $.ajax
      type: 'GET'
      url: "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/search_by?id=" + selection.id
      dataType: 'script'
    return

get_filters_selected = ->
  selectedValues = ''
  $('#filter-select :selected').each ->
    selectedValues += '&filters[]=' + $(this).val()
    return
  selectedValues

geocodeAddress = (geocoder, resultsMap) ->
  address = document.getElementById('input-search').value
  geocoder.geocode { 'address': address }, (results, status) ->
    if status == 'OK'
      resultsMap.setCenter results[0].geometry.location
    return
  return

@populate_sidebar_with_map = (locale) ->
  sidebar = document.getElementById("list-refuges")
  google.maps.event.addListener map, 'bounds_changed', ->
    google.maps.event.trigger(map, "resize")
    sidebar.innerHTML = ""
    results = new Array
    new_locations = new Array
    i = 0
    while i < markers.length
      if map.getBounds().contains(markers[i].getPosition())
        results.push markers[i]
      i++
    if results.length == 0
      if locale == "es"
        no_refuges_found = "Ningún refugio ha sido encontrado."
      else
        no_refuges_found = "No refuges found in the location in the map."
      sidebar.innerHTML = '<li><a href="#"><div><h4>' + no_refuges_found + '</h4></div><a></li>'
    else
      for result in results
        refuge_status = ""
        new_locations.push result.getPosition()
        if result.status == "good"
          refuge_status = "refuge-good"
        else
          refuge_status = "refuge-bad"
        li = document.createElement('li')
        li.setAttribute("onclick", "ga('send','event','refuges','" + result.content + "','-',null);")
        link_to = document.createElement('a')
        table = document.createElement('table')
        tr_name = document.createElement('tr')
        td_status_icon = document.createElement('td')
        td_status_icon.setAttribute("rowspan", "2")
        i = document.createElement('i')
        i.setAttribute("class", refuge_status)
        td_status_icon.appendChild(i)
        td_name = document.createElement('td')
        td_name.appendChild(document.createTextNode(result.content))
        tr_name.appendChild(td_status_icon)
        tr_name.appendChild(td_name)
        tr_address = document.createElement('tr')
        td_address = document.createElement('td')
        h6_address = document.createElement('h6')
        if result.city == ''
          refuge_description = result.country
        else
          refuge_description = result.city + ", " + result.country
        h6_address.appendChild(document.createTextNode(refuge_description))
        td_address.appendChild(h6_address)
        tr_address.appendChild(td_address)
        table.appendChild(tr_name)
        table.appendChild(tr_address)
        link_to.appendChild(table)
        link_to.setAttribute("href", "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + result.id)
        link_to.setAttribute("data-method", "get")
        li.appendChild(link_to)
        sidebar.appendChild(li)
      sessionStorage['refuges_list'] = sidebar.innerHTML
    sessionStorage['new_locations'] = new_locations
    return
  return

@populate_sidebar_without_map = (locations, locale) ->
  google.maps.event.clearListeners(map, 'bounds_changed')
  map.addListener 'bounds_changed', ->
    sessionStorage['last_lat'] = map.center.lat()
    sessionStorage['last_lng'] = map.center.lng()
    sessionStorage['last_zoom'] = map.zoom
  sidebar = document.getElementById("list-refuges")
  sidebar.innerHTML = ""
  for location in locations
    refuge_status = ""
    if location[6] == "good"
      refuge_status = "refuge-good"
    else
      refuge_status = "refuge-bad"
    li = document.createElement('li')
    li.setAttribute("onclick", "ga('send','event','refuges','" + location[0] + "','-',null);")
    link_to = document.createElement('a')
    table = document.createElement('table')
    tr_name = document.createElement('tr')
    td_status_icon = document.createElement('td')
    td_status_icon.setAttribute("rowspan", "2")
    i = document.createElement('i')
    i.setAttribute("class", refuge_status)
    td_status_icon.appendChild(i)
    td_name = document.createElement('td')
    td_name.appendChild(document.createTextNode(location[0]))
    tr_name.appendChild(td_status_icon)
    tr_name.appendChild(td_name)
    tr_address = document.createElement('tr')
    td_address = document.createElement('td')
    h6_address = document.createElement('h6')
    if location[4] == ''
      refuge_description = location[5]
    else
      refuge_description = location[4] + ", " + location[5]
    h6_address.appendChild(document.createTextNode(refuge_description))
    td_address.appendChild(h6_address)
    tr_address.appendChild(td_address)
    table.appendChild(tr_name)
    table.appendChild(tr_address)
    link_to.appendChild(table)
    link_to.setAttribute("href", "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + location[3])
    link_to.setAttribute("data-method", "get")
    li.appendChild(link_to)
    sidebar.appendChild(li)
  sessionStorage['refuges_list'] = sidebar.innerHTML
  return

@initialize_refuges = ->
  $('#refuges-map').css('height', $('#sidebar-nav').height())
  $('#refuges-list').css('height', $('#sidebar-nav').height())

@show_on_map = (location, locale) ->
  geocoder = new google.maps.Geocoder
  latlng = {lat: parseFloat(location.latitude), lng: parseFloat(location.longitude)}
  geocoder.geocode { 'location': latlng }, (results, status) ->
    if status == 'OK'
      if results[1]
        map.setZoom 15
        map.panTo latlng
        show_marker = new (google.maps.Marker)(
          id: location.id
          city: location.city
          country: location.country_name
          position: latlng
          content: String(location.name)
          issues_by_entities: location.issues_by_entities
          contact_name: location.contact_name
          contact_phone: location.contact_phone
          map: map)
        contact_phone = initialize_values show_marker.contact_phone
        contact_name = initialize_values show_marker.contact_name
        entities_1 = []
        entities_2 = []
        i = 0
        for entity in show_marker.issues_by_entities
          if i % 2 == 0
            if entity[1] == 0
              entities_1 += tr_content entity[0], 'green'
            else
              entities_1 += tr_content entity[0], 'red'
          else
            if entity[1] == 0
              entities_2 += tr_content entity[0], 'green'
            else
              entities_2 += tr_content entity[0], 'red'
          i++
        info_marker_event infowindow, show_marker, locale
      else
        window.alert 'No results found'
    else
      window.alert 'Geocoder failed due to: ' + status
    return

@filter_map = (new_locations, locale) ->
  clear_overlays()
  markers = []
  bounds = new (google.maps.LatLngBounds)
  for location in new_locations
    marker = new (google.maps.Marker)(
      position: new (google.maps.LatLng)(parseFloat(location[1]), parseFloat(location[2]))
      content: location[0]
      id: location[3]
      city: location[4]
      country: location[5]
      status: location[6]
      issues_by_entities: location[7]
      contact_name: location[8]
      contact_phone: location[9]
      map: map)
    info_marker_event infowindow, marker, locale
    markers.push marker
    bounds.extend marker.getPosition()
  map.fitBounds bounds

clear_overlays = ->
  i = 0
  while i < markers.length
    markers[i].setMap null
    i++
  markers.length = 0
  return

info_marker_event = (infowindow, marker, locale) ->
  contact_phone = initialize_values marker.contact_phone, locale
  contact_name = initialize_values marker.contact_name, locale
  if locale == 'es'
    t_coordinator = "Coordinador"
    t_phone = "Teléfono"
    t_more_details = "Ver más "
  else
    t_coordinator = "Coordinator"
    t_phone = "Phone"
    t_more_details = "Show more "
  issues_by_entities_1 = []
  issues_by_entities_2 = []
  i = 0
  for entity in marker.issues_by_entities
    if i % 2 == 0
      if entity[1] == 0
        issues_by_entities_1 += tr_content entity[0], 'green'
      else
        issues_by_entities_1 += tr_content entity[0], 'red'
    else
      if entity[1] == 0
        issues_by_entities_2 += tr_content entity[0], 'green'
      else
        issues_by_entities_2 += tr_content entity[0], 'red'
    i++
  link_to = "<%= ENV['HOST'] %>" + "<%= ENV['RELATIVE_URL_ROOT'] %>" + locale + "/refuges/" + marker.id
  analytics_track_event = "ga('send','event','refuges','" + marker.content + "','-',null);"
  contentString = '<div class="infowindow-content">' +
    '<div id="siteNotice">' +
    '</div>' +
    '<h3 id="firstHeading" class="firstHeading" style="padding: 0 28px;">' + marker.content + '</h3>' +
    '<div id="bodyContent">' +
    '<p style="padding: 0 30px;">' + t_coordinator + ': ' + contact_name + '</p>' +
    '<p style="padding: 0 30px;">' + t_phone + ': ' + contact_phone + '</p>' +
    '<div class="col-xs-12">' +
    '<div class="col-xs-6"><table>' + issues_by_entities_1 + '</table></div>' +
    '<div class="col-xs-6"><table>' + issues_by_entities_2 + '</table></div>' +
    '</div>' +
    '<div class="col-xs-12">' +
    "<a href=" + link_to + ' class="pull-right" onclick="' + analytics_track_event + '" style="padding: 11px 0;">' + t_more_details + '></a>' +
    '</div>' +
    '</div>' +
    '</div>'
  google.maps.event.addListener marker, 'click', do (marker) ->
    ->
      infowindow.setContent contentString
      infowindow.open map, marker
      return

tr_content = (entity, status)->
  '<tr><td style="padding-right: 10px;"><span class="circle-' + status + '"></span></td><td>' + entity + '</td></tr>'

initialize_values = (new_value, locale) ->
  if new_value == ''
    result = "-"
  else
    result = new_value
  return result

map_checkbox = (controlDiv, map, locale) ->
  controlUI = document.createElement('div')
  controlUI.style.backgroundColor = '#fff'
  controlUI.style.borderRadius = '1px'
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)'
  controlUI.style.marginTop = '10px'
  controlUI.style.textAlign = 'center'
  controlUI.style.padding = '0px 10px 0px 10px'
  controlDiv.appendChild controlUI
  controlText = document.createElement('div')
  controlText.setAttribute("class", "checkbox-container ui checkbox")
  controlText.setAttribute("onclick", "search_map_if_moving_listener()")
  checkbox = document.createElement('input')
  checkbox.setAttribute("type", "checkbox")
  checkbox.setAttribute("id", "search_mode")
  if sessionStorage["map_checkbox_status"] == 'true'
    checkbox.checked = true
  else
    checkbox.checked = false
  label = document.createElement('label')
  label_text = ""
  if locale == 'es'
    label_text = "Buscar mientras me desplazo en el mapa"
  else
    label_text = "Search as I move the map"
  label.appendChild(document.createTextNode(label_text))
  controlText.appendChild checkbox
  controlText.appendChild label
  controlUI.appendChild controlText
  return

document.addEventListener "turbolinks:load", ->
  $('.ui.accordion').accordion();
  initialize_refuges()
  $("#search-button").on 'click', ->
    input = document.getElementById('input-search')
    google.maps.event.trigger input, 'focus'
    google.maps.event.trigger input, 'keydown', keyCode: 13
    geocoder = new (google.maps.Geocoder)
    geocodeAddress geocoder, map
    return
  $("#input-search").keypress (e) ->
    if e.which == 13
      geocoder = new (google.maps.Geocoder)
      geocodeAddress geocoder, map
    return

@loadMapWithRefuge = (refuge, locale) ->
  refuge_marker =
    lat: parseFloat(refuge[1])
    lng: parseFloat(refuge[2])
  map = new (google.maps.Map)(document.getElementById('refuge-map'),
    zoom: 12
    center: refuge_marker)
  marker = new (google.maps.Marker)(
    position: refuge_marker
    map: map)
  google.maps.event.addListenerOnce map, 'idle', ->
    google.maps.event.trigger map, 'resize'
    map.setCenter(refuge_marker);
    return

@view_mode = (refuges_map_data, locale) ->
  $('#view-mode').on 'click', ->
    list_label = ''
    map_label = ''
    if locale == 'es'
      list_label = 'Lista'
      map_label = 'Mapa'
    else
      list_label = 'List'
      map_label = 'Map'
    if $('#refuges-list').hasClass('hide')
      button_content = '<i class="map icon"></i>' + map_label
      $('#refuges-list').removeClass 'hide'
      $('#refuges-map').addClass 'hide'
    else
      button_content = '<i class="list icon"></i>' + list_label
      old_map = document.getElementById('refuges-map')
      old_map.parentNode.removeChild old_map
      new_map = document.createElement('div')
      new_map.id = 'refuges-map'
      $('.main-content')[0].prepend new_map
      $('#refuges-map').css 'height', $('#sidebar-nav').height()
      loadMapWithLocations refuges_map_data, locale, false
      $('#refuges-list').addClass 'hide'
      $('#refuges-map').removeClass 'hide'
    $('#view-mode').html button_content
    return